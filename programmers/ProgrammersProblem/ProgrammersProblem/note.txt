    
    Level1 실패율
    sort로 할시 테스트 통과가 안됨
    sort는 내부적으로 quick sort 
    stable sort는 내부적으로 merge sort 방식이다
    정렬 알고리즘 중 데이터가 동일한 ID(key)로 이루어진 경우 sort()결과가 예상과 다르게 나올 수 있다.
    stable은 원소 순서를 보장하는 여부로 판별된다. 
    unstable:selection,quick,heap sort
    stable:merge sort

    Level1 최대공약수와 최소공배수
    Level2 N개의 최소공배수
    유클리드 호제법사용시 간단하게 구할수 있다.
    최대 공약수
    int gcd(int a,int b){
        int c;
        while(b !=0){
            c= a%b;
            a=b;
            b=c;
        }
        return a;
    }
    최소 공배수
    int lcm(int a, int b){ 
        return a*b /gcd(a,b);
    }


    자주 쓰는 string 함수들
    isdigit(c) 숫자여부 확인 true,false;
    isalpha(c) 이니셜여부 확인 true,false;
    toupper(c) 이니셜 대문자 변환
    tolower(c) 이니셜 소문자 변환

    정수 char 변환 i+'0'
    char 정수 변환 c-'0'



    priority queue 사용시
    헤더 <queue>
    priority_queue<자료형,컨테이너,비교함수> 변수명
    비교함수로 정렬
    priority_queue<자료형> 변수명
    내림차순으로 정렬


    map or set stl에서 key값에 구조체로 데이터 형식을 넣을시
    key값을 탐색할수 있게 정의해줘야 한다.
    이진트리인 map에서 key탐색을 위해선 대소비교가 가능해야함으로
    operator(연산자 오버라이딩)을 사용해 <,> 기호를 재정의 함으로 대소비교가 가능하게 할 수 있다.
    ex
    struct Point{
        int x,y;

        bool operator <(const Point &var) const{
            if( x!= var.x){
                return x< var.x;    
            }
            else{
                return y< var.y;
            }
    }
